
package application;

import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Alert;
import javafx.scene.control.TextField;
import javafx.scene.control.Alert.AlertType;
import javafx.scene.control.cell.PropertyValueFactory;
import javafx.scene.control.Button;
import javafx.scene.control.ChoiceBox;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;

public class MainController {

	@FXML TextField _studentId;
	@FXML TextField _firstName;
	@FXML TextField _lastName;
	@FXML TextField _address;
	@FXML TextField _city;
	@FXML TextField _province;
	@FXML TextField _postalcode;

	@FXML TextField _searchID;


	Connection _connection = null;

	public void onSearchClicked(ActionEvent event){ //Action when Search button is clicked

		this._connection = DBConnection.getConnection();
		int _id = Integer.parseInt(this._searchID.getText());

		String city =

		try {
			ResultSet Students_value = this._connection.createStatement().executeQuery(
					String.format("SELECT * FROM students WHERE userid = %d", _id));

			this._connection.commit();

			if(Students_value.next()){

				this._studentId.setText(Students_value.getString("studentId"));
				this._firstName.setText(Students_value.getString("firstname"));
				this._lastName.setText(Students_value.getString("lastname"));
				this._address.setText(Students_value.getString("address"));
				this._city.setText(Students_value.getString("address"));
				this._province.setText(Students_value.getString("address"));
				this._postalcode.setText(Students_value.getString("address"));



				//ENABLE TO EDIT THE SEARCH INFORMATION
				this._updatefirstName.setText(this._updatefirstName.getText());
				this._updatelastName.setText(this._updatelastName.getText());
				this._updatetestTitle.setText(this._updatetestTitle.getText());
				this._updateuserId.setText(this._updateuserId.getText());

			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		finally{
			DBConnection.closeConnection();
		}
	}


	@FXML public void initialize(){
		ObservableList<Model> data = FXCollections.observableArrayList(); //Represent each objects from database.

		try {
			this._connection = DBConnection.getConnection();
			ResultSet test = this._connection.createStatement().executeQuery("SELECT * FROM test"); //Get all value of the game table
			//ResultSet playerResult = this._connection.createStatement().executeQuery("SELECT * FROM PLAYER");  //Get all value of the player table
			//ResultSet playerGameResult = this._connection.createStatement().executeQuery("SELECT * FROM PLAYERANDGAME");  //Get all value of the playergame table


			while(test.next()){ //Check new values until there are no value

				data.add(new Model(test.getString("testtitle"),
						test.getString("userid"), test.getString("firstname"),
						test.getString("lastname")));


				table_title.setCellValueFactory(new PropertyValueFactory<>("_testtitle"));
				table_Id.setCellValueFactory(new PropertyValueFactory<>("_id"));
				table_FirstName.setCellValueFactory(new PropertyValueFactory<>("_firstName"));
				table_LastName.setCellValueFactory(new PropertyValueFactory<>("_lastName"));
				table.setItems(data);
			}

		}

		catch (SQLException e){
			e.printStackTrace();
		}

		finally{
			DBConnection.closeConnection();
		}
	}
}